C0
	Ich erstelle in Github ein neues Repository namens "TEST_TP"
	Dann erstelle ich auf meinem Home-Laufwerk einen neuen Ordner für dieses Repository.
	In diesem Ordner gebe ich dann den Befehl <git init> ein, um dort ein neues lokales Repository zu definieren (dabei erstellt es mir automatisch den Branch "master").
	Mit dem Befehl <git clone https://github.com/DavidWeissteiner/TEST_TP.git> kann ich dann das in Github erstellte Repository in mein lokales Repository herunterladen, und es setzt den Zeiger meines lokalen Repositories automatisch auf diesen Link.

C0 --> C1
	Mit dem Befehl <touch documentation.txt> erstelle ich eine neues Textdokument, in welchem ich jeden Schritt dokumentieren werden.
	Dann füge ich mit dem Befehl <git add *> alle Files meinem lokalen Repository hinzu, damit sie "getrackt" werden.
	Ich erstelle mit dem Befehl <git commit -m "C1"> einen neuen Commit mit der Message "C1" damit ich nachher sehen kann was ich bei diesem Commit gemacht habe.
	Danach lade ich die neue Version mit dem Befehl <git push> auf Github hinauf.
	
C1 --> C2
	Ich füge wiederum mit dem Befehl <git add *> alle Files meinem lokalen Repository hinzu, damit sie "gestaged" und später hinaufgeladen wird.
	Ich erstelle mit dem Befehl <git commit -m "C2"> einen neuen Commit mit der Message "C2" damit ich nachher sehen kann was ich bei diesem Commit gemacht habe.
	Danach lade ich die neue Version mit dem Befehl <git push> auf Github hinauf.

C2 --> C3
	Mit dem Befehl <git branch iss53> erstelle ich einen neuen Branch (=Entwicklungszweig) namens "iss53".
	Ich springe mit meinem HEAD durch den Befehl <git checkout iss53> zum neuen Branch.
	Danach dokumentiere ich das in documentation.txt und mache wiederum <git add *>, <git commit -m "C3"> und <git push>, um es zu committen und hinaufzuladen.
	
C3 --> C4
	Um den neuen Branch an dem Branch "master" anzuhängen, springe ich mit meinem HEAD durch den Befehl <git checkout master> zurück auf den Commit C2.
	Dort erstelle ich einen neuen Branch namens "hotfix" mit dem Befehl <git branch hotfix>.
	Dann springe ich mit meinem HEAD auf den Branch "hotfix" durch den Befehl <git checkout hotfix>.
	Dort mach ich wieder <git add *>, <git commit -m "C4"> und <git push>, um es zu committen und hinaufzuladen.